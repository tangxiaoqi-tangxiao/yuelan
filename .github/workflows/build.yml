name: Build and release Electron apps

on:
  push:
    branches:
      - main  # 根据需要更改分支

jobs:
  build-and-release:
    name: Build and release by tag
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ windows-latest, macos-latest]
    
    permissions:
      contents: write

    steps:
      - name: Check out git repository
        uses: actions/checkout@v4.1.1

      - name: Install Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: "20"

      - name: 安装依赖
        run: npm install

      # Windows平台执行命令
      - name: Build electron apps for Windows platform
        if: matrix.os == 'windows-latest'
        run: |
          npm run build:win
        # 将构建的产物路径保存在环境变量中
        env:
          BUILD_OUTPUT: "path/to/windows/output"

      # macOS平台执行命令
      - name: Build electron apps for macOS platform
        if: matrix.os == 'macos-latest'
        run: npm run build:mac
        env:
          BUILD_OUTPUT: "path/to/macos/output"

      # 创建 GitHub Release (如果不存在)
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 上传 Windows 构建产物到 Release
      - name: Upload Windows build to Release
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.BUILD_OUTPUT }}/windows_build.zip
          asset_name: windows_build.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 上传 macOS 构建产物到 Release
      - name: Upload macOS build to Release
        if: matrix.os == 'macos-latest'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.BUILD_OUTPUT }}/mac_build.zip
          asset_name: mac_build.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
